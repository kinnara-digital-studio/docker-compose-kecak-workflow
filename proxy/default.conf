server {
       listen         $ENV{"PROXY_REDIRECT_PORT"};
       server_name    $ENV{"PROXY_HOST"};
       return         301 https://$server_name$request_uri;
}
#Kecak Web Configuration
server {
  listen              $ENV{"PROXY_DEFAULT_PORT"} 
$ENV{"PROXY_MODE"};                    # kecak default port
  listen              [::]:$ENV{"PROXY_DEFAULT_PORT"} 
$ENV{"PROXY_MODE"};
  ssl_certificate /etc/nginx/ssl/$ENV{"PROXY_SSL_CERTIFICATE"};
  ssl_certificate_key /etc/nginx/ssl/$ENV{"PROXY_SSL_KEY"};
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  server_name         $ENV{"PROXY_HOST"};
  underscores_in_headers on;

  location / {
    include /etc/nginx/includes/proxy.conf;
    proxy_pass http://web:8080;
    proxy_set_header Referer http://$ENV{"PROXY_HOST"};
  }

  client_max_body_size 10M;
  access_log off;
  error_log  /var/log/nginx/error.log error;
}
# Default
server {
  listen $ENV{"PROXY_DEFAULT_PORT"} default_server;
  ssl_certificate /etc/nginx/ssl/$ENV{"PROXY_SSL_CERTIFICATE"};
  ssl_certificate_key /etc/nginx/ssl/$ENV{"PROXY_SSL_KEY"};
  server_name _;
  root /var/www/html;

  charset UTF-8;

  error_page 404 /backend-not-found.html;
  location = /backend-not-found.html {
    allow   all;
  }
  location / {
    return 404;
  }

  access_log off;
  log_not_found off;
  error_log  /var/log/nginx/error.log error;
}

